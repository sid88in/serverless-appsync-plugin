// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Waf ApiKey rules should generate a rule for customRule 1`] = `
Array [
  Object {
    "Action": Object {
      "Allow": Object {},
    },
    "Name": "MyCustomRule",
    "Priority": undefined,
    "Statement": Object {
      "AndStatement": Object {
        "Statements": Array [
          Object {
            "GeoMatchStatement": Object {
              "CountryCodes": Array [
                "US",
              ],
            },
          },
          Object {
            "ByteMatchStatement": Object {
              "FieldToMatch": Object {
                "SingleHeader": Object {
                  "Name": "X-Api-key",
                },
              },
              "PositionalConstraint": "EXACTLY",
              "SearchString": Object {
                "Fn::GetAtt": Array [
                  "GraphQlApiMyKey",
                  "ApiKey",
                ],
              },
              "TextTransformations": Array [
                Object {
                  "Priority": 0,
                  "Type": "LOWERCASE",
                },
              ],
            },
          },
        ],
      },
    },
    "VisibilityConfig": Object {
      "CloudWatchMetricsEnabled": true,
      "MetricName": "MyCustomRule",
      "SampledRequestsEnabled": true,
    },
  },
]
`;

exports[`Waf ApiKey rules should generate a rule for disableIntrospection 1`] = `
Array [
  Object {
    "Action": Object {
      "Block": Object {},
    },
    "Name": "MyKeyDisableIntrospection",
    "Priority": undefined,
    "Statement": Object {
      "AndStatement": Object {
        "Statements": Array [
          Object {
            "OrStatement": Object {
              "Statements": Array [
                Object {
                  "SizeConstraintStatement": Object {
                    "ComparisonOperator": "GT",
                    "FieldToMatch": Object {
                      "Body": Object {},
                    },
                    "Size": 8192,
                    "TextTransformations": Array [
                      Object {
                        "Priority": 0,
                        "Type": "NONE",
                      },
                    ],
                  },
                },
                Object {
                  "ByteMatchStatement": Object {
                    "FieldToMatch": Object {
                      "Body": Object {},
                    },
                    "PositionalConstraint": "CONTAINS",
                    "SearchString": "__schema",
                    "TextTransformations": Array [
                      Object {
                        "Priority": 0,
                        "Type": "COMPRESS_WHITE_SPACE",
                      },
                    ],
                  },
                },
              ],
            },
          },
          Object {
            "ByteMatchStatement": Object {
              "FieldToMatch": Object {
                "SingleHeader": Object {
                  "Name": "X-Api-key",
                },
              },
              "PositionalConstraint": "EXACTLY",
              "SearchString": Object {
                "Fn::GetAtt": Array [
                  "GraphQlApiMyKey",
                  "ApiKey",
                ],
              },
              "TextTransformations": Array [
                Object {
                  "Priority": 0,
                  "Type": "LOWERCASE",
                },
              ],
            },
          },
        ],
      },
    },
    "VisibilityConfig": Object {
      "CloudWatchMetricsEnabled": true,
      "MetricName": "MyKeyDisableIntrospection",
      "SampledRequestsEnabled": true,
    },
  },
]
`;

exports[`Waf ApiKey rules should generate a rule for emptyStatements 1`] = `
Array [
  Object {
    "Action": Object {
      "Allow": Object {},
    },
    "Name": "rulesWithoutStatements",
    "Priority": undefined,
    "Statement": Object {
      "ByteMatchStatement": Object {
        "FieldToMatch": Object {
          "SingleHeader": Object {
            "Name": "X-Api-key",
          },
        },
        "PositionalConstraint": "EXACTLY",
        "SearchString": Object {
          "Fn::GetAtt": Array [
            "GraphQlApiMyKey",
            "ApiKey",
          ],
        },
        "TextTransformations": Array [
          Object {
            "Priority": 0,
            "Type": "LOWERCASE",
          },
        ],
      },
    },
    "VisibilityConfig": Object {
      "CloudWatchMetricsEnabled": true,
      "MetricName": "rulesWithoutStatements",
      "SampledRequestsEnabled": true,
    },
  },
]
`;

exports[`Waf ApiKey rules should generate a rule for throttle 1`] = `
Array [
  Object {
    "Action": Object {
      "Block": Object {},
    },
    "Name": "MyKeyThrottle",
    "Priority": undefined,
    "Statement": Object {
      "RateBasedStatement": Object {
        "AggregateKeyType": "IP",
        "ForwardedIPConfig": undefined,
        "Limit": 100,
        "ScopeDownStatement": Object {
          "ByteMatchStatement": Object {
            "FieldToMatch": Object {
              "SingleHeader": Object {
                "Name": "X-Api-key",
              },
            },
            "PositionalConstraint": "EXACTLY",
            "SearchString": Object {
              "Fn::GetAtt": Array [
                "GraphQlApiMyKey",
                "ApiKey",
              ],
            },
            "TextTransformations": Array [
              Object {
                "Priority": 0,
                "Type": "LOWERCASE",
              },
            ],
          },
        },
      },
    },
    "VisibilityConfig": Object {
      "CloudWatchMetricsEnabled": true,
      "MetricName": "MyKeyThrottle",
      "SampledRequestsEnabled": true,
    },
  },
]
`;

exports[`Waf ApiKey rules should generate a rule for throttleWithStatements 1`] = `
Array [
  Object {
    "Action": Object {
      "Block": Object {},
    },
    "Name": "Throttle rule with custom ScopeDownStatement",
    "Priority": undefined,
    "Statement": Object {
      "RateBasedStatement": Object {
        "AggregateKeyType": "IP",
        "ForwardedIPConfig": undefined,
        "Limit": 100,
        "ScopeDownStatement": Object {
          "AndStatement": Object {
            "Statements": Array [
              Object {
                "ByteMatchStatement": Object {
                  "FieldToMatch": Object {
                    "SingleHeader": Object {
                      "Name": "X-Foo",
                    },
                  },
                  "PositionalConstraint": "EXACTLY",
                  "SearchString": "Bar",
                  "TextTransformations": Array [
                    Object {
                      "Priority": 0,
                      "Type": "LOWERCASE",
                    },
                  ],
                },
              },
              Object {
                "ByteMatchStatement": Object {
                  "FieldToMatch": Object {
                    "SingleHeader": Object {
                      "Name": "X-Api-key",
                    },
                  },
                  "PositionalConstraint": "EXACTLY",
                  "SearchString": Object {
                    "Fn::GetAtt": Array [
                      "GraphQlApiMyKey",
                      "ApiKey",
                    ],
                  },
                  "TextTransformations": Array [
                    Object {
                      "Priority": 0,
                      "Type": "LOWERCASE",
                    },
                  ],
                },
              },
            ],
          },
        },
      },
    },
    "VisibilityConfig": Object {
      "CloudWatchMetricsEnabled": true,
      "MetricName": "Throttle rule with custom ScopeDownStatement",
      "SampledRequestsEnabled": true,
    },
  },
]
`;

exports[`Waf Base Resources should generate only the waf association 1`] = `
Object {
  "GraphQlWafAssoc": Object {
    "Properties": Object {
      "ResourceArn": Object {
        "Fn::GetAtt": Array [
          "GraphQlApi",
          "Arn",
        ],
      },
      "WebACLArn": "arn:aws:wafv2:us-east-1:123456789012:regional/webacl/my-Waf/d7b694d2-4f7d-4dd6-a9a9-843dd1931330",
    },
    "Type": "AWS::WAFv2::WebACLAssociation",
  },
}
`;

exports[`Waf Base Resources should generate waf Resources 1`] = `
Object {
  "GraphQlWaf": Object {
    "Properties": Object {
      "DefaultAction": Object {
        "Allow": Object {},
      },
      "Description": "My Waf ACL",
      "Name": "Waf",
      "Rules": Array [],
      "Scope": "REGIONAL",
      "Tags": Array [
        Object {
          "Key": "stage",
          "Value": "Dev",
        },
      ],
      "VisibilityConfig": Object {
        "CloudWatchMetricsEnabled": true,
        "MetricName": "MyVisibilityConfig",
        "SampledRequestsEnabled": true,
      },
    },
    "Type": "AWS::WAFv2::WebACL",
  },
  "GraphQlWafAssoc": Object {
    "Properties": Object {
      "ResourceArn": Object {
        "Fn::GetAtt": Array [
          "GraphQlApi",
          "Arn",
        ],
      },
      "WebACLArn": Object {
        "Fn::GetAtt": Array [
          "GraphQlWaf",
          "Arn",
        ],
      },
    },
    "Type": "AWS::WAFv2::WebACLAssociation",
  },
}
`;

exports[`Waf Base Resources should generate waf Resources without tags 1`] = `
Object {
  "GraphQlWaf": Object {
    "Properties": Object {
      "DefaultAction": Object {
        "Allow": Object {},
      },
      "Description": "My Waf ACL",
      "Name": "Waf",
      "Rules": Array [],
      "Scope": "REGIONAL",
      "Tags": undefined,
      "VisibilityConfig": Object {
        "CloudWatchMetricsEnabled": true,
        "MetricName": "MyVisibilityConfig",
        "SampledRequestsEnabled": true,
      },
    },
    "Type": "AWS::WAFv2::WebACL",
  },
  "GraphQlWafAssoc": Object {
    "Properties": Object {
      "ResourceArn": Object {
        "Fn::GetAtt": Array [
          "GraphQlApi",
          "Arn",
        ],
      },
      "WebACLArn": Object {
        "Fn::GetAtt": Array [
          "GraphQlWaf",
          "Arn",
        ],
      },
    },
    "Type": "AWS::WAFv2::WebACLAssociation",
  },
}
`;

exports[`Waf Custom rules should generate a custom rule 1`] = `
Object {
  "Action": Object {
    "Block": Object {},
  },
  "Name": "disable US",
  "Priority": 200,
  "Statement": Object {
    "GeoMatchStatement": Object {
      "CountryCodes": Array [
        "US",
      ],
    },
  },
  "VisibilityConfig": Object {
    "CloudWatchMetricsEnabled": true,
    "MetricName": "disable US",
    "SampledRequestsEnabled": true,
  },
}
`;

exports[`Waf Custom rules should generate a custom rule with ManagedRuleGroup 1`] = `
Object {
  "Name": "MyRule1",
  "OverrideAction": Object {
    "None": Object {},
  },
  "Priority": 200,
  "Statement": Object {
    "ManagedRuleGroupStatement": Object {
      "Name": "AWSManagedRulesCommonRuleSet",
      "VendorName": "AWS",
    },
  },
  "VisibilityConfig": Object {
    "CloudWatchMetricsEnabled": true,
    "MetricName": "MyRule1",
    "SampledRequestsEnabled": true,
  },
}
`;

exports[`Waf Disable introspection should generate a preset rule 1`] = `
Object {
  "Action": Object {
    "Block": Object {},
  },
  "Name": "BaseDisableIntrospection",
  "Priority": undefined,
  "Statement": Object {
    "OrStatement": Object {
      "Statements": Array [
        Object {
          "SizeConstraintStatement": Object {
            "ComparisonOperator": "GT",
            "FieldToMatch": Object {
              "Body": Object {},
            },
            "Size": 8192,
            "TextTransformations": Array [
              Object {
                "Priority": 0,
                "Type": "NONE",
              },
            ],
          },
        },
        Object {
          "ByteMatchStatement": Object {
            "FieldToMatch": Object {
              "Body": Object {},
            },
            "PositionalConstraint": "CONTAINS",
            "SearchString": "__schema",
            "TextTransformations": Array [
              Object {
                "Priority": 0,
                "Type": "COMPRESS_WHITE_SPACE",
              },
            ],
          },
        },
      ],
    },
  },
  "VisibilityConfig": Object {
    "CloudWatchMetricsEnabled": true,
    "MetricName": "BaseDisableIntrospection",
    "SampledRequestsEnabled": true,
  },
}
`;

exports[`Waf Disable introspection should generate a preset rule with custon config 1`] = `
Object {
  "Action": Object {
    "Block": Object {},
  },
  "Name": "BaseDisableIntrospection",
  "Priority": 200,
  "Statement": Object {
    "OrStatement": Object {
      "Statements": Array [
        Object {
          "SizeConstraintStatement": Object {
            "ComparisonOperator": "GT",
            "FieldToMatch": Object {
              "Body": Object {},
            },
            "Size": 8192,
            "TextTransformations": Array [
              Object {
                "Priority": 0,
                "Type": "NONE",
              },
            ],
          },
        },
        Object {
          "ByteMatchStatement": Object {
            "FieldToMatch": Object {
              "Body": Object {},
            },
            "PositionalConstraint": "CONTAINS",
            "SearchString": "__schema",
            "TextTransformations": Array [
              Object {
                "Priority": 0,
                "Type": "COMPRESS_WHITE_SPACE",
              },
            ],
          },
        },
      ],
    },
  },
  "VisibilityConfig": Object {
    "CloudWatchMetricsEnabled": false,
    "MetricName": "DisableIntrospection",
    "SampledRequestsEnabled": false,
  },
}
`;

exports[`Waf Throttle rules should generate a preset rule 1`] = `
Object {
  "Action": Object {
    "Block": Object {},
  },
  "Name": "BaseThrottle",
  "Priority": undefined,
  "Statement": Object {
    "RateBasedStatement": Object {
      "AggregateKeyType": "IP",
      "ForwardedIPConfig": undefined,
      "Limit": 100,
      "ScopeDownStatement": undefined,
    },
  },
  "VisibilityConfig": Object {
    "CloudWatchMetricsEnabled": true,
    "MetricName": "BaseThrottle",
    "SampledRequestsEnabled": true,
  },
}
`;

exports[`Waf Throttle rules should generate a preset rule with config 1`] = `
Object {
  "Action": Object {
    "Block": Object {},
  },
  "Name": "BaseThrottle",
  "Priority": 300,
  "Statement": Object {
    "RateBasedStatement": Object {
      "AggregateKeyType": "FORWARDED_IP",
      "ForwardedIPConfig": Object {
        "FallbackBehavior": "MATCH",
        "HeaderName": "X-Forwarded-To",
      },
      "Limit": 200,
      "ScopeDownStatement": undefined,
    },
  },
  "VisibilityConfig": Object {
    "CloudWatchMetricsEnabled": false,
    "MetricName": "ThrottleRule",
    "SampledRequestsEnabled": false,
  },
}
`;

exports[`Waf Throttle rules should generate a preset rule with limit 1`] = `
Object {
  "Action": Object {
    "Block": Object {},
  },
  "Name": "BaseThrottle",
  "Priority": undefined,
  "Statement": Object {
    "RateBasedStatement": Object {
      "AggregateKeyType": "IP",
      "ForwardedIPConfig": undefined,
      "Limit": 500,
      "ScopeDownStatement": undefined,
    },
  },
  "VisibilityConfig": Object {
    "CloudWatchMetricsEnabled": true,
    "MetricName": "BaseThrottle",
    "SampledRequestsEnabled": true,
  },
}
`;
