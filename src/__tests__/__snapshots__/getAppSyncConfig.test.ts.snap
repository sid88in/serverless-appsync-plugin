// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataSources should merge dataSource arrays 1`] = `
Array [
  Object {
    "name": "myDataSource",
    "type": "NONE",
  },
  Object {
    "name": "myOtherDataSource",
    "type": "NONE",
  },
  Object {
    "name": "otherNamedDs",
    "type": "NONE",
  },
  Object {
    "name": "anotherNamedSource",
    "type": "NONE",
  },
]
`;

exports[`DataSources should merge dataSources embedded into resolvers and pipelineFunctions 1`] = `
Object {
  "dataSources": Array [
    Object {
      "name": "myDataSource",
      "type": "NONE",
    },
    Object {
      "name": "myOtherDataSource",
      "type": "NONE",
    },
    Object {
      "config": Object {
        "functionName": "getUser",
      },
      "name": "Query_getUser",
      "type": "AWS_LAMBDA",
    },
    Object {
      "config": Object {
        "functionName": "getUsers",
      },
      "name": "getUsers",
      "type": "AWS_LAMBDA",
    },
    Object {
      "config": Object {
        "functionName": "funcion1",
      },
      "name": "function1",
      "type": "AWS_LAMBDA",
    },
    Object {
      "config": Object {
        "functionName": "funcion2",
      },
      "name": "getUsers",
      "type": "AWS_LAMBDA",
    },
  ],
  "resolvers": Array [
    Object {
      "dataSource": "Query_getUser",
      "field": "getUser",
      "kind": "UNIT",
      "type": "Query",
    },
    Object {
      "dataSource": "getUsers",
      "field": "getUsers",
      "kind": "UNIT",
      "type": "Query",
    },
  ],
}
`;

exports[`DataSources should resolve dataSource names 1`] = `
Array [
  Object {
    "name": "myDataSource",
    "type": "NONE",
  },
  Object {
    "name": "myOtherDataSource",
    "type": "NONE",
  },
]
`;

exports[`Pipeline Functions should merge function arrays 1`] = `
Array [
  Object {
    "dataSource": "users",
    "name": "function1",
  },
  Object {
    "dataSource": "users",
    "name": "myFunction2",
  },
  Object {
    "dataSource": "users",
    "name": "function3",
  },
  Object {
    "dataSource": "users",
    "name": "myFunction4",
  },
  Object {
    "dataSource": "users",
    "name": "function5",
  },
]
`;

exports[`Pipeline Functions should resolve functions names 1`] = `
Array [
  Object {
    "dataSource": "users",
    "name": "function1",
  },
  Object {
    "dataSource": "users",
    "name": "myFunction2",
  },
  Object {
    "dataSource": "users",
    "name": "function3",
  },
]
`;

exports[`Resolvers should merge resolvers arrays 1`] = `
Array [
  Object {
    "dataSource": "users",
    "field": "getUser",
    "kind": "UNIT",
    "type": "Query",
  },
  Object {
    "dataSource": "users",
    "field": "getUsers",
    "kind": "UNIT",
    "type": "Query",
  },
  Object {
    "field": "pipeline",
    "functions": Array [
      "function1",
      "function2",
    ],
    "kind": "PIPELINE",
    "type": "Query",
  },
  Object {
    "dataSource": "posts",
    "field": "getPost",
    "kind": "UNIT",
    "type": "Query",
  },
  Object {
    "dataSource": "comments",
    "field": "getComments",
    "kind": "UNIT",
    "type": "Query",
  },
  Object {
    "dataSource": "posts",
    "field": "getPosts",
    "kind": "UNIT",
    "type": "Query",
  },
  Object {
    "field": "getUsers",
    "functions": Array [
      "function1",
      "function2",
    ],
    "kind": "PIPELINE",
    "type": "Query",
  },
]
`;

exports[`Resolvers should resolve resolver type and fields 1`] = `
Array [
  Object {
    "dataSource": "users",
    "field": "getUser",
    "kind": "UNIT",
    "type": "Query",
  },
  Object {
    "dataSource": "users",
    "field": "getUsers",
    "kind": "UNIT",
    "type": "Query",
  },
  Object {
    "dataSource": "posts",
    "field": "getPosts",
    "kind": "UNIT",
    "type": "Query",
  },
]
`;

exports[`Schema should return a schema array unchanged 1`] = `
Array [
  "users.graphql",
  "posts.graphql",
]
`;

exports[`Schema should return a single schema as an array 1`] = `
Array [
  "mySchema.graphql",
]
`;

exports[`Schema should return the default schema 1`] = `
Array [
  "schema.graphql",
]
`;

exports[`returns basic config 1`] = `
Object {
  "additionalAuthenticationProviders": Array [],
  "apiKeys": Array [
    Object {
      "description": "Auto-generated api key",
      "name": "Default",
    },
  ],
  "authentication": Object {
    "type": "API_KEY",
  },
  "dataSources": Array [],
  "mappingTemplatesLocation": Object {
    "pipelineFunctions": "mapping-templates",
    "resolvers": "mapping-templates",
  },
  "name": "My Api",
  "pipelineFunctions": Array [],
  "resolvers": Array [],
  "schema": Array [
    "schema.graphql",
  ],
}
`;
